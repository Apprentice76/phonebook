{"version":3,"sources":["components/Filter.jsx","components/Notification.jsx","components/PersonForm.jsx","services/phoneService.jsx","components/Person.jsx","components/Persons.jsx","App.jsx","index.jsx"],"names":["Filter","props","className","value","keyword","onChange","stateUpdater","placeholder","Notification","message","type","PersonForm","submitAction","name","nameUpdater","number","numberUpdater","onSubmit","baseUrl","process","svc","getAll","a","axios","get","resp","data","create","obj","post","remove","id","delete","update","edited","put","Person","uniq","delFunc","onClick","Persons","db","setDb","setError","filter","person","toLowerCase","includes","map","entry","find","p","window","confirm","then","setTimeout","text","catch","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setKeyword","error","useEffect","clr","event","target","preventDefault","result","ok","length","check","exist","split","toUpperCase","slice","mod","console","log","e","response","s","trim","charAt","substring","join","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2786dc9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"search\"\r\n                value={props.keyword}\r\n                onChange={props.stateUpdater}\r\n                placeholder=\"Search...\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter\r\n","const Notification = ({ message, type }) => {\r\n    // const err = {\r\n    //     color: \"red\",\r\n    //     background: \"wheat\",\r\n    //     border: \"solid\",\r\n    //     fontSize: 20,\r\n    //     borderRadius: 10,\r\n    //     padding: 3,\r\n    //     marginBottom: 20,\r\n    // };\r\n\r\n    // const success = {\r\n    //     backgroundColor: \"lightgreen\",\r\n    //     color: \"green\",\r\n    //     borderStyle: \"solid\",\r\n    //     fontSize: 20,\r\n    //     borderRadius: 10,\r\n    //     padding: 3,\r\n    //     marginBottom: 20,\r\n    // };\r\n\r\n    // const style = type === \".error\" ? err : type === \".success\" ? success : null;\r\n\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n    return <div className={`${type}`}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    const {submitAction, name, nameUpdater, number, numberUpdater} = props;\r\n    return (\r\n        <form onSubmit={submitAction}>\r\n            <div>\r\n                <div className='entry'>Name</div>\r\n                <input className='value' value={name} onChange={nameUpdater} />\r\n            </div>\r\n            <div>\r\n                <div className='entry'>Number</div>\r\n                <input\r\n                    className='value'\r\n                    value={number}\r\n                    onChange={numberUpdater}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = process.env.baseUrl || '/api/persons'\r\n\r\nconst getAll = async () => {\r\n\tconst resp = await axios.get(baseUrl)\r\n\treturn resp.data\r\n}\r\n\r\nconst create = async (obj) => {\r\n\t// if (!obj || !obj.name || !obj.number) {\r\n\t// \tthrow new Error('Error: Required fields are empty')\r\n\t// } else if (obj.name.length < 3) {\r\n\t// \tthrow new Error(\r\n\t// \t\t`Error: name '${obj.name}' is shorter than the minimum allowed length: 3.`\r\n\t// \t)\r\n\t// } else if (obj.number.length < 6) {\r\n\t// \tthrow new Error(\r\n\t// \t\t`Error: name '${obj.number}' is shorter than the minimum allowed length: 6.`\r\n\t// \t)\r\n\t// }\r\n\tconst resp = await axios.post(baseUrl, obj)\r\n\treturn resp.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n\tconst resp = await axios.delete(`${baseUrl}/${id}`, { id: id })\r\n\treturn resp.data\r\n}\r\n\r\nconst update = async (id, edited) => {\r\n\tconst resp = await axios.put(`${baseUrl}/${id}`, edited)\r\n\treturn resp.data\r\n}\r\n\r\nconst svc = {\r\n\tgetAll,\r\n\tcreate,\r\n\tremove,\r\n\tupdate,\r\n}\r\n\r\nexport default svc\r\n","import React from 'react'\r\n\r\nconst Person = ({ uniq, name, number, delFunc}) => {\r\n    return (\r\n        <li key={uniq} className=\"person\">\r\n            {name} {number}\r\n            <button onClick={delFunc}>delete</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Person\r\n","import svc from \"../services/phoneService\";\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = (props) => {\r\n    const { db, keyword, setDb, setError } = props;\r\n\r\n    // Delete func for a entry in directory\r\n    const remove = (id) => () => {\r\n        const entry = db.find((p) => p.id === id);\r\n        // Delete confirmation with a 5-sec notif after deletion\r\n        if (window.confirm(`Delete ${entry.name}`)) {\r\n            svc.remove(entry.id)\r\n                .then(() => {\r\n                    setDb(db.filter((p) => p.id !== entry.id));\r\n                })\r\n                .then(() => {\r\n                    setTimeout(() => {\r\n                        setError({});\r\n                    }, 5000);\r\n                    setError({\r\n                        text: `Deleted ${entry.name}`,\r\n                        type: \"error\",\r\n                    });\r\n                })\r\n                // Error-catching in case data present in front-end but not in db\r\n                .catch(() => {\r\n                    setTimeout(() => {\r\n                        setError({});\r\n                    }, 5000);\r\n                    setError({\r\n                        text: `Information of ${entry.name} has already been removed from server`,\r\n                        type: \"error\",\r\n                    });\r\n                    setDb(db.filter((p) => p.id !== id));\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {/* Phone directory, filtered if search queru is not empty. */}\r\n                {db\r\n                    .filter((person) => {\r\n                        if (keyword !== \"\") {\r\n                            return person.name\r\n                                .toLowerCase()\r\n                                .includes(keyword.toLowerCase());\r\n                        }\r\n                        return true;\r\n                    })\r\n                    .map((person) => (\r\n                        <Person\r\n                            key={person.name}\r\n                            uniq={person.id}\r\n                            name={person.name}\r\n                            number={person.number}\r\n                            delFunc={remove(person.id)}\r\n                        />\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Persons;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport svc from './services/phoneService'\r\n\r\nconst App = () => {\r\n\t// Initialising hooks.\r\n\tconst [persons, setPersons] = useState([])\r\n\tconst [newName, setNewName] = useState('')\r\n\tconst [newNumber, setNewNumber] = useState('')\r\n\tconst [keyword, setKeyword] = useState('')\r\n\tconst [error, setError] = useState({})\r\n\r\n\tconst hookDB = () => {\r\n\t\tsvc.getAll().then((resp) => {\r\n\t\t\tsetPersons(resp)\r\n\t\t})\r\n\t}\r\n\r\n\t// Syncing persons obj to backend db at beginning.\r\n\tuseEffect(hookDB, [])\r\n\r\n\t// clear func for resetting form fields after submission.\r\n\tconst clr = () => {\r\n\t\tsetNewName('')\r\n\t\tsetNewNumber('')\r\n\t}\r\n\r\n\t//Error Handler\r\n\tconst check = (obj) => {\r\n\t\tlet result = {\r\n\t\t\tok: true,\r\n\t\t\terror: '',\r\n\t\t}\r\n\t\tif (!obj || !obj.name || !obj.number) {\r\n\t\t\tresult = {\r\n\t\t\t\tok: false,\r\n\t\t\t\terror: 'Error: Required fields are empty',\r\n\t\t\t}\r\n\t\t\t// throw new Error('Error: Required fields are empty')\r\n\t\t} else if (obj.name.length < 3) {\r\n\t\t\tresult = {\r\n\t\t\t\tok: false,\r\n\t\t\t\terror: `Error: name '${obj.name}' is shorter than the minimum allowed length: 3.`,\r\n\t\t\t}\r\n\t\t\t// throw new Error(`Error: name '${obj.name}' is shorter than the minimum allowed length: 3.`)\r\n\t\t} else if (obj.number.length < 6) {\r\n\t\t\tresult = {\r\n\t\t\t\tok: false,\r\n\t\t\t\terror: `Error: number '${obj.number}' is shorter than the minimum allowed length: 6.`,\r\n\t\t\t}\r\n\t\t\t// throw new Error(`Error: name '${obj.number}' is shorter than the minimum allowed length: 6.`)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t// Add new person to db, spl: if person w/ same name exists, update their data or else cancel.\r\n\tconst addName = (event) => {\r\n\t\t// Prevents page reload.\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst entry = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber,\r\n\t\t}\r\n\r\n\t\tconst result = check(entry)\r\n\r\n\t\tif (!result.ok) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetError({})\r\n\t\t\t}, 5000)\r\n\t\t\tsetError({\r\n\t\t\t\ttext: result.error,\r\n\t\t\t\ttype: 'error',\r\n\t\t\t})\r\n\t\t\tclr()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst exist = persons.find(\r\n\t\t\t(p) =>\r\n\t\t\t\tp.name === newName.split('')[0].toUpperCase() + newName.slice(1)\r\n\t\t)\r\n\r\n\t\t// if-else for 'spl' case\r\n\t\tif (exist) {\r\n\t\t\tif (\r\n\t\t\t\twindow.confirm(\r\n\t\t\t\t\t`${newName} is already added to phonebook, replace old number with a new one?`\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tconst mod = {\r\n\t\t\t\t\t...exist,\r\n\t\t\t\t\tnumber: newNumber,\r\n\t\t\t\t}\r\n\t\t\t\t// PUT request with a 5-sec notif\r\n\t\t\t\tsvc.update(exist.id, mod)\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\t\tsetPersons(\r\n\t\t\t\t\t\t\tpersons.map((p) => {\r\n\t\t\t\t\t\t\t\tif (p.id === exist.id) {\r\n\t\t\t\t\t\t\t\t\treturn data\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn p\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetError({})\r\n\t\t\t\t\t\t}, 5000)\r\n\t\t\t\t\t\tsetError({\r\n\t\t\t\t\t\t\ttext: `Updated ${exist.name}`,\r\n\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.log(e.response.data))\r\n\t\t\t}\r\n\t\t\tclr()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst obj = {\r\n\t\t\tname: newName\r\n\t\t\t\t.split(' ')\r\n\t\t\t\t.map(\r\n\t\t\t\t\t(s) =>\r\n\t\t\t\t\t\t`${s.trim().charAt(0).toUpperCase()}${s\r\n\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t.substring(1)\r\n\t\t\t\t\t\t\t.toLowerCase()}`\r\n\t\t\t\t)\r\n\t\t\t\t.join(' '),\r\n\t\t\tnumber: newNumber,\r\n\t\t}\r\n\t\t// POST request with a 5-sec notif\r\n\t\tsvc.create(obj)\r\n\t\t\t.then(() => setPersons(persons.concat(obj)))\r\n\t\t\t.then(() => clr())\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetError({})\r\n\t\t\t\t}, 5000)\r\n\t\t\t\tsetError({\r\n\t\t\t\t\ttext: `Added ${newName}`,\r\n\t\t\t\t\ttype: 'success',\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tsetError({\r\n\t\t\t\t\ttext: e.message,\r\n\t\t\t\t\ttype: 'error',\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(e.message)\r\n\t\t\t})\r\n\t}\r\n\r\n\t// Main page elements\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2 className='title'>Phonebook</h2>\r\n\t\t\t{/* Notifier if error is not empty */}\r\n\t\t\t<Notification message={error.text} type={error.type} />\r\n\t\t\t{/* Search bar */}\r\n\t\t\t<Filter\r\n\t\t\t\tkeyword={keyword}\r\n\t\t\t\tstateUpdater={(event) => setKeyword(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<h2 className='add'>Add new entry</h2>\r\n\t\t\t{/* Form for person details (w/o validation)*/}\r\n\t\t\t<PersonForm\r\n\t\t\t\tsubmitAction={addName}\r\n\t\t\t\tname={newName}\r\n\t\t\t\tnameUpdater={(event) => setNewName(event.target.value)}\r\n\t\t\t\tnumber={newNumber}\r\n\t\t\t\tnumberUpdater={(event) => setNewNumber(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t{/* Phone directory */}\r\n\t\t\t<Persons\r\n\t\t\t\tdb={persons}\r\n\t\t\t\tkeyword={keyword}\r\n\t\t\t\tsetDb={setPersons}\r\n\t\t\t\tsetError={setError}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}